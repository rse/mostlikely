{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/base64-js/index.js","node_modules/buffer/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","src/mostlikely-codec-b16.js","src/mostlikely-codec-rle.js","src/mostlikely-codec-z85.js","src/mostlikely-hash-crc32.js","src/mostlikely-hash-djbx33x.js","src/mostlikely-hash-fnv.js","src/mostlikely-hash-jenkins.js","src/mostlikely-hash-murmurhash3.js","src/mostlikely-type-bitfield.js","src/mostlikely-type-bloomfilter.js","src/mostlikely-type-octetarray.js","src/mostlikely.js"],"names":["placeHoldersCount","b64","len","length","Error","byteLength","toByteArray","i","j","l","tmp","placeHolders","arr","Arr","L","revLookup","charCodeAt","tripletToBase64","num","lookup","encodeChunk","uint8","start","end","output","push","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","exports","Uint8Array","Array","code","typedArraySupport","__proto__","prototype","foo","subarray","e","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","this","allocUnsafe","from","value","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","actual","write","slice","fromArrayLike","array","byteOffset","obj","isBuffer","copy","buffer","isnan","type","isArray","data","toString","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","n","m","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","indexOf","call","lastIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","found","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","byteArray","c","hi","lo","src","dst","require","INSPECT_MAX_BYTES","global","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","log","LN2","module","B16","hex","toUpperCase","dest","RLE","k","to","encoder","split","decoder","INPUT_BLOCKLEN","INPUT_BASE","INPUT_DIVISOR","OUTPUT_BLOCKLEN","OUTPUT_BASE","OUTPUT_DIVISOR","Z85","input","divisor","idx","trunc","sig","pad","sizeBorder","encodeRaw","suffix","decodeRaw","splice","CRC32","seed","hash","crc32_tab","DJBX33X","FNV","Jenkins","u8","rot","mix","final","off","MurmurHash3","c1","c2","r1","r2","k1","mul32","rotl32","sum32","_mostlikelyCodecZ","_mostlikelyCodecB","_mostlikelyCodecRle","_mostlikelyTypeOctetarray","BitField","_classCallCheck","import","numBytes","_mostlikelyTypeOctetarray2","default","create","posByte","posBit","rle","_mostlikelyCodecRle2","encodeSize","encode","_mostlikelyCodecZ2","_mostlikelyCodecB2","decode","decodeSize","_mostlikelyTypeBitfield","_mostlikelyHashMurmurhash","_mostlikelyHashJenkins","_mostlikelyHashCrc","_mostlikelyHashDjbx33x","_mostlikelyHashFnv","LN2_SQUARED","minBits","itemCount","errorRate","round","HASHES_MAX","numHashes","numBits","hashes","_mostlikelyHashMurmurhash2","_mostlikelyHashJenkins2","_mostlikelyHashCrc2","_mostlikelyHashDjbx33x2","_mostlikelyHashFnv2","COUNTER_BITS","COUNTER_MAX","bf_get","bf","get","bf_set","BloomFilter","mask","counter","ceil","nHashes","bfMask","_mostlikelyTypeBitfield2","bfCntr","bits","export","cntr","_str$match","_str$match2","_slicedToArray","clear","OctetArray","oa","_mostlikelyTypeBloomfilter","_mostlikelyTypeBloomfilter2"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*\n**  MostLikely -- Most-Likely Classification Through Bloom-Filtering\n**  Copyright (c) 2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Base16 (aka hexadecimal) encoding/decoding  */\n\nexport default class B16 {\n    static encode (data, size = data.length) {\n        let arr = new Array(size)\n        for (let i = 0; i < size; i++) {\n            let hex = data[i].toString(16).toUpperCase()\n            if (hex.length < 2)\n                hex = \"0\" + hex\n            arr[i] = hex\n        }\n        return arr.join(\"\")\n    }\n    static decode (str, dest) {\n        if (typeof dest === \"undefined\")\n            dest = new Array(str.length / 2);\n        let pos = 0\n        for (let i = 0, l = str.length; i < l; i += 2)\n            dest[pos++] = parseInt(str.substr(i, 2), 16)\n        return dest\n    }\n}\n\n","/*\n**  MostLikely -- Most-Likely Classification Through Bloom-Filtering\n**  Copyright (c) 2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Run-Length-Encoding (RLE) for zeros.  */\n\nexport default class RLE {\n    static encodeSize (from) {\n        let l = from.length\n        let j = 0\n        for (let i = 0; i < l; i++, j++) {\n            if (from[i] === 0) {\n                let k = 1\n                while (i < l && from[i + 1] === 0 && k < 0xFF) {\n                    k++\n                    i++\n                }\n                ++j\n            }\n        }\n        return j\n    }\n    static encode (from, to) {\n        let l = from.length\n        for (let i = 0, j = 0; i < l; i++, j++) {\n            to[j] = from[i]\n            if (from[i] === 0) {\n                let k = 1\n                while (i < l && from[i + 1] === 0 && k < 0xFF) {\n                    k++\n                    i++\n                }\n                to[++j] = k\n            }\n        }\n        return this\n    }\n    static decodeSize (from) {\n        let l = from.length\n        let j = 0\n        for (let i = 0; i < l; i++, j++) {\n            if (from[i] === 0)\n                for (let k = from[++i]; k > 1; k--)\n                    ++j\n        }\n        return j\n    }\n    static decode (from, to) {\n        let l = from.length\n        for (let i = 0, j = 0; i < l; i++, j++) {\n            to[j] = from[i]\n            if (from[i] === 0)\n                for (let k = from[++i]; k > 1; k--)\n                    to[++j] = 0\n        }\n        return this\n    }\n}\n\n","/*\n**  MostLikely -- Most-Likely Classification Through Bloom-Filtering\n**  Copyright (c) 2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  ZeroMQ Base-85 (Z85) encoding/decoding algorithm.\n    See http://rfc.zeromq.org/spec:32 for details on Z85.\n    This code supports both raw Z85 and Z85 with padding.  */\n\n/*  the encoder mapping table  */\nconst encoder = (\n    \"0123456789\" +\n    \"abcdefghijklmnopqrstuvwxyz\" +\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n    \".-:+=^!/*?&<>()[]{}@%$#\"\n).split(\"\")\n\n/*  the decoder mapping table  */\nconst decoder = [\n    0x00, 0x44, 0x00, 0x54, 0x53, 0x52, 0x48, 0x00,\n    0x4B, 0x4C, 0x46, 0x41, 0x00, 0x3F, 0x3E, 0x45,\n    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n    0x08, 0x09, 0x40, 0x00, 0x49, 0x42, 0x4A, 0x47,\n    0x51, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A,\n    0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32,\n    0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A,\n    0x3B, 0x3C, 0x3D, 0x4D, 0x00, 0x4E, 0x43, 0x00,\n    0x00, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,\n    0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18,\n    0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,\n    0x21, 0x22, 0x23, 0x4F, 0x00, 0x50, 0x00, 0x00\n]\n\n/*  the encoding/decoding constants  */\nconst INPUT_BLOCKLEN  = 4\nconst INPUT_BASE      = 256\nconst INPUT_DIVISOR   = Math.pow(INPUT_BASE, 3)\nconst OUTPUT_BLOCKLEN = 5\nconst OUTPUT_BASE     = 85\nconst OUTPUT_DIVISOR  = Math.pow(OUTPUT_BASE, 4)\n\n/*  the API class  */\nexport default class Z85 {\n\n    /*  raw Z85 encoding (no padding support)  */\n    static encodeRaw (input, size = input.length) {\n        if ((size % INPUT_BLOCKLEN) !== 0)\n            throw new Error(`encodeRaw: invalid input length (multiple of ${INPUT_BLOCKLEN} expected)`)\n        let str = \"\", i = 0, value = 0\n        while (i < size) {\n            value = (value * INPUT_BASE) + input[i++]\n            if ((i % INPUT_BLOCKLEN) === 0) {\n                let divisor = OUTPUT_DIVISOR\n                while (divisor >= 1) {\n                    let idx = Math.floor(value / divisor) % OUTPUT_BASE\n                    str += encoder[idx]\n                    divisor /= OUTPUT_BASE\n                }\n                value = 0\n             }\n        }\n        return str\n    }\n\n    /*  raw Z85 decoding (no padding support)  */\n    static decodeRaw (input, size = input.length) {\n        if ((size % OUTPUT_BLOCKLEN) !== 0)\n            throw new Error(`decodeRaw: invalid input length (multiple of ${OUTPUT_BLOCKLEN} expected)`);\n        let dest = new Array(size * INPUT_BLOCKLEN / OUTPUT_BLOCKLEN)\n        let i = 0, j = 0, value = 0\n        while (i < size) {\n            let idx = input.charCodeAt(i++) - 32\n            if (idx < 0 || idx >= decoder.length)\n                break\n            value = (value * OUTPUT_BASE) + decoder[idx]\n            if ((i % OUTPUT_BLOCKLEN) === 0) {\n                let divisor = INPUT_DIVISOR\n                while (divisor >= 1) {\n                    dest[j++] = Math.trunc((value / divisor) % INPUT_BASE)\n                    divisor /= INPUT_BASE\n                }\n                value = 0\n            }\n        }\n        return dest\n    }\n\n    /*  Z85 encoding  */\n    static encode (input, size = input.length) {\n        let sig = size % INPUT_BLOCKLEN\n        let pad = INPUT_BLOCKLEN - sig\n        let sizeBorder = size - sig\n        let output = this.encodeRaw(input, sizeBorder)\n        if (sig > 0) {\n            let suffix = new Array(INPUT_BLOCKLEN)\n            for (let i = 0; i < INPUT_BLOCKLEN; i++)\n                suffix[i] = i < sig ? input[sizeBorder + i] : 0\n            let out = this.encodeRaw(suffix, INPUT_BLOCKLEN)\n            output += out.substr(0, OUTPUT_BLOCKLEN - pad)\n        }\n        return output\n    }\n\n    /*  Z85 decoding  */\n    static decode (input, size = input.length) {\n        let pad = OUTPUT_BLOCKLEN - (size % OUTPUT_BLOCKLEN)\n        if (pad > 0) {\n            let suffix = \"\"\n            for (let i = 0; i < pad; i++)\n                suffix += \"u\"\n            input += suffix\n            size += pad\n        }\n        let output = this.decodeRaw(input, size)\n        if (pad > 0)\n            output.splice(output.length - pad, pad)\n        return output\n    }\n}\n\n","/*\n**  MostLikely -- Most-Likely Classification Through Bloom-Filtering\n**  Copyright (c) 2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  This library provides W. Wesley Peterson' 32-Bit Cyclic Redundancy\n    Check (CRC32), an error-detecting and hashing function. See\n    https://en.wikipedia.org/wiki/Cyclic_redundancy_check for details.\n    The difference of this version against the original CRC32 is just\n    the seed argument to support Bloom filters. */\n\nconst crc32_tab = [\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419,\n    0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4,\n    0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07,\n    0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de,\n    0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856,\n    0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,\n    0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4,\n    0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3,\n    0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a,\n    0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599,\n    0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n    0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190,\n    0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f,\n    0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0x0f00f934, 0x9609a88e,\n    0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed,\n    0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,\n    0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3,\n    0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2,\n    0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a,\n    0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5,\n    0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010,\n    0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17,\n    0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6,\n    0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615,\n    0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8,\n    0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1, 0xf00f9344,\n    0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,\n    0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a,\n    0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1,\n    0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c,\n    0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef,\n    0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n    0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe,\n    0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31,\n    0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c,\n    0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b,\n    0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,\n    0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1,\n    0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c,\n    0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278,\n    0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7,\n    0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66,\n    0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605,\n    0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8,\n    0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b,\n    0x2d02ef8d\n]\n\nexport default function CRC32 (data, size = data.length, seed = 1) {\n    let hash = 0xffffffff ^ seed\n    for (let i = 0; i < size; i++)\n        hash = crc32_tab[(hash ^ data[i]) & 0xff] ^ (hash >>> 8)\n    hash ^= 0xffffffff\n    return (hash >>> 0)\n}\n\n","/*\n**  MostLikely -- Most-Likely Classification Through Bloom-Filtering\n**  Copyright (c) 2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Daniel J. Bernstein's Times-33-XOR (DJBX33X) hash function (in\n    an unrolled variant). It basically uses a function like \"hash(i)\n    = hash(i-1) * 33 + data[i]\". This is one of the best known hash\n    functions for strings. Because it is both computed very fast and\n    distributes very well. The magic of number 33, i.e. why it works\n    better than many other constants, prime or not, has never been\n    adequately explained by anyone, but if one experimentally tests\n    all multipliers between 1 and 256 one detects that even numbers\n    are not useable at all and the remaining 128 odd numbers (except\n    for the number 1) work more or less all equally well. They all\n    distribute in an acceptable way and this way fill a hash table with\n    an average percent of approx. 86%. But the advantage of 33 is that\n    it be computed with a shift and an addition! The difference of this\n    version against the original hash function is just the seed argument\n    to support Bloom filters.  */\n\nexport default function DJBX33X (data, size = data.size, seed = 1) {\n    let hash = 5381 * seed\n    let i = 0\n    for (; size >= 8; size -= 8) {\n        hash = ((hash << 5) + hash) ^ data[i++]\n        hash = ((hash << 5) + hash) ^ data[i++]\n        hash = ((hash << 5) + hash) ^ data[i++]\n        hash = ((hash << 5) + hash) ^ data[i++]\n        hash = ((hash << 5) + hash) ^ data[i++]\n        hash = ((hash << 5) + hash) ^ data[i++]\n        hash = ((hash << 5) + hash) ^ data[i++]\n        hash = ((hash << 5) + hash) ^ data[i++]\n    }\n    switch (size) {\n        case 7: hash = ((hash << 5) + hash) ^ data[i++] /* falls through */\n        case 6: hash = ((hash << 5) + hash) ^ data[i++] /* falls through */\n        case 5: hash = ((hash << 5) + hash) ^ data[i++] /* falls through */\n        case 4: hash = ((hash << 5) + hash) ^ data[i++] /* falls through */\n        case 3: hash = ((hash << 5) + hash) ^ data[i++] /* falls through */\n        case 2: hash = ((hash << 5) + hash) ^ data[i++] /* falls through */\n        case 1: hash = ((hash << 5) + hash) ^ data[i++]; break\n        default: /* case 0: */ break\n    }\n    return (hash & 0xFFFFFFFF) >>> 0\n}\n\n","/*\n**  MostLikely -- Most-Likely Classification Through Bloom-Filtering\n**  Copyright (c) 2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  This is Fowler–Noll–Vo (FNV-1a 32-bit), a non-cryptographic hash\n    function suitable for general hash-based lookup developed by Glenn\n    Fowler, Landon Curt Noll and Phong Vo. The basis of the hash\n    algorithm was taken from an idea sent by Email to the IEEE Posix\n    P1003.2 mailing list from Phong Vo <kpv@research.att.com> and Glenn\n    Fowler <gsf@research.att.com>. Landon Curt Noll <chongo@toad.com>\n    later improved on their algorithm. The magic is in the interesting\n    relationship between the special prime 16777619 (2^24 + 403) and\n    2^32 and 2^8. This hash produces only very few collisions for real\n    world keys and works well on both numbers and strings. It is not one\n    of the fastest hashes. See http://isthe.com/chongo/tech/comp/fnv/\n    for details. */\n\nexport default function FNV (data, size = data.length, seed = 1) {\n    let hash = 0x811C9DC5 * seed\n    for (let i = 0; i < size; i++) {\n        hash = hash ^ data[i]\n        /*  operation: hash = hash * FNV_Prime\n            32-bit FNV_Prime: 2**24 + 2**8 + 0x93  */\n        hash += (hash << 24) + (hash << 8) + (hash << 7) + (hash << 4) + (hash << 1)\n    }\n    return (hash & 0xFFFFFFFF) >>> 0\n}\n\n","/*\n**  MostLikely -- Most-Likely Classification Through Bloom-Filtering\n**  Copyright (c) 2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  This library provides Jenkins lookup3, a non-cryptographic\n    hash function suitable for general hash-based lookup. See\n    https://en.wikipedia.org/wiki/Jenkins_hash_function for details. The\n    difference of this version against the original hash function is\n    just the seed argument to support Bloom filters.  */\n\nexport default function Jenkins (u8, size = u8.length, seed = 1) {\n    let a = 0\n    let b = 0\n    let c = 0\n\n    const rot = (x, k) =>\n        ((x << k) | (x >>> (32 - k))) >>> 0\n\n    const mix = () => {\n        a = (a - c) >>> 0;  a ^= rot(c,  4); c = (c + b) >>> 0\n        b = (b - a) >>> 0;  b ^= rot(a,  6); a = (a + c) >>> 0\n        c = (c - b) >>> 0;  c ^= rot(b,  8); b = (b + a) >>> 0\n        a = (a - c) >>> 0;  a ^= rot(c, 16); c = (c + b) >>> 0\n        b = (b - a) >>> 0;  b ^= rot(a, 19); a = (a + c) >>> 0\n        c = (c - b) >>> 0;  c ^= rot(b,  4); b = (b + a) >>> 0\n    }\n\n    const final = () => {\n        c ^= b; c = (c - rot(b, 14)) >>> 0\n        a ^= c; a = (a - rot(c, 11)) >>> 0\n        b ^= a; b = (b - rot(a, 25)) >>> 0\n        c ^= b; c = (c - rot(b, 16)) >>> 0\n        a ^= c; a = (a - rot(c,  4)) >>> 0\n        b ^= a; b = (b - rot(a, 14)) >>> 0\n        c ^= b; c = (c - rot(b, 24)) >>> 0\n    }\n\n    a = b = c = (0xDEADBEEF + size + seed >>> 0) >>> 0\n\n    let off = 0\n\n    while (size > 12) {\n        a = (a + u8[off + 0] + (u8[off + 1] << 8) + (u8[off +  2] << 16) + (u8[off +  3] << 24)) >>> 0\n        b = (b + u8[off + 4] + (u8[off + 5] << 8) + (u8[off +  6] << 16) + (u8[off +  7] << 24)) >>> 0\n        c = (c + u8[off + 8] + (u8[off + 9] << 8) + (u8[off + 10] << 16) + (u8[off + 11] << 24)) >>> 0\n        mix()\n        size   -= 12\n        off += 12\n    }\n\n    switch (size) {\n        case 12:\n            c = (c + u8[off + 8] + (u8[off + 9] << 8) + (u8[off + 10] << 16) + (u8[off + 11] << 24)) >>> 0\n            b = (b + u8[off + 4] + (u8[off + 5] << 8) + (u8[off +  6] << 16) + (u8[off +  7] << 24)) >>> 0\n            a = (a + u8[off + 0] + (u8[off + 1] << 8) + (u8[off +  2] << 16) + (u8[off +  3] << 24)) >>> 0\n            break\n        case 11:\n            c = (c + u8[off + 8] + (u8[off + 9] << 8) + (u8[off + 10] << 16)) >>> 0\n            b = (b + u8[off + 4] + (u8[off + 5] << 8) + (u8[off +  6] << 16) + (u8[off + 7] << 24)) >>> 0\n            a = (a + u8[off + 0] + (u8[off + 1] << 8) + (u8[off +  2] << 16) + (u8[off + 3] << 24)) >>> 0\n            break\n        case 10:\n            c = (c + u8[off + 8] + (u8[off + 9] << 8)) >>> 0\n            b = (b + u8[off + 4] + (u8[off + 5] << 8) + (u8[off + 6] << 16) + (u8[off + 7] << 24)) >>> 0\n            a = (a + u8[off + 0] + (u8[off + 1] << 8) + (u8[off + 2] << 16) + (u8[off + 3] << 24)) >>> 0\n            break\n        case 9:\n            c = (c + u8[off + 8]) >>> 0\n            b = (b + u8[off + 4] + (u8[off + 5] << 8) + (u8[off + 6] << 16) + (u8[off + 7] << 24)) >>> 0\n            a = (a + u8[off + 0] + (u8[off + 1] << 8) + (u8[off + 2] << 16) + (u8[off + 3] << 24)) >>> 0\n            break\n        case 8:\n            b = (b + u8[off + 4] + (u8[off + 5] << 8) + (u8[off + 6] << 16) + (u8[off + 7] << 24)) >>> 0\n            a = (a + u8[off + 0] + (u8[off + 1] << 8) + (u8[off + 2] << 16) + (u8[off + 3] << 24)) >>> 0\n            break\n        case 7:\n            b = (b + u8[off + 4] + (u8[off + 5] << 8) + (u8[off + 6] << 16)) >>> 0\n            a = (a + u8[off + 0] + (u8[off + 1] << 8) + (u8[off + 2] << 16) + (u8[off + 3] << 24)) >>> 0\n            break\n        case 6:\n            b = (b + u8[off + 4] + (u8[off + 5] << 8)) >>> 0\n            a = (a + u8[off + 0] + (u8[off + 1] << 8) + (u8[off + 2] << 16) + (u8[off + 3] << 24)) >>> 0\n            break\n        case 5:\n            b = (b + u8[off + 4]) >>> 0\n            a = (a + u8[off + 0] + (u8[off + 1] << 8) + (u8[off + 2] << 16) + (u8[off + 3] << 24)) >>> 0\n            break\n        case 4:\n            a = (a + u8[off + 0] + (u8[off + 1] << 8) + (u8[off + 2] << 16) + (u8[off + 3] << 24)) >>> 0\n            break;\n        case 3:\n            a = (a + u8[off + 0] + (u8[off + 1] << 8) + (u8[off + 2] << 16)) >>> 0\n            break\n        case 2:\n            a = (a + u8[off + 0] + (u8[off + 1] << 8)) >>> 0\n            break\n        case 1:\n            a = (a + u8[off + 0]) >>> 0\n            break\n        case 0:\n            return c >>> 0\n    }\n\n    final()\n    return c >>> 0\n}\n\n","/*\n**  MostLikely -- Most-Likely Classification Through Bloom-Filtering\n**  Copyright (c) 2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  This is MurmurHash3, a non-cryptographic hash function suitable for\n    general hash-based lookup. See\n    https://en.wikipedia.org/wiki/MurmurHash for details. The difference\n    of this version against the original hash function is just the seed\n    argument to support Bloom filters.  */\n\nconst mul32  = (a, b) => (a & 0xffff) * b + (((a >>> 16) * b & 0xffff) << 16) & 0xffffffff\nconst sum32  = (a, b) => (a & 0xffff) + (b >>> 16) + (((a >>> 16) + b & 0xffff) << 16) & 0xffffffff\nconst rotl32 = (a, b) => (a << b) | (a >>> (32 - b))\n\nexport default function MurmurHash3 (data, size = data.length, seed = 1) {\n    let c1 = 0xcc9e2d51\n    let c2 = 0x1b873593\n    let r1 = 15\n    let r2 = 13\n    let m  = 5\n    let n  = 0x6b64e654\n\n    let hash = 0xFBA4C795 * seed\n\n    let k1\n    let i\n    for (i = 0; i + 4 <= size; i += 4) {\n        k1 = data[i] |\n            (data[i + 1] <<  8) |\n            (data[i + 2] << 16) |\n            (data[i + 3] << 24)\n        k1 = mul32 (k1, c1)\n        k1 = rotl32(k1, r1)\n        k1 = mul32 (k1, c2)\n        hash ^= k1;\n        hash = rotl32(hash, r2)\n        hash = mul32 (hash, m)\n        hash = sum32 (hash, n)\n    }\n\n    k1 = 0\n    switch (size & 3) {\n        case 3:\n            k1 ^= data[i + 2] << 16\n            /* falls through */\n        case 2:\n            k1 ^= data[i + 1] << 8\n            /* falls through */\n        case 1:\n            k1 ^= data[i];\n            k1 = mul32 (k1, c1)\n            k1 = rotl32(k1, r1)\n            k1 = mul32 (k1, c2)\n            hash ^= k1\n    }\n\n    hash ^= size\n    hash ^= hash >>> 16\n    hash = mul32(hash, 0x85ebca6b)\n    hash ^= hash >>> 13\n    hash = mul32(hash, 0xc2b2ae35)\n    hash ^= hash >>> 16\n\n    return hash >>> 0\n}\n\n","/*\n**  MostLikely -- Most-Likely Classification Through Bloom-Filtering\n**  Copyright (c) 2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  This is a simple bitfield, but with import/export functionality.  */\n\nimport Z85         from \"./mostlikely-codec-z85\"\nimport B16         from \"./mostlikely-codec-b16\"\nimport RLE         from \"./mostlikely-codec-rle\"\nimport OctetArray  from \"./mostlikely-type-octetarray\"\n\nexport default class BitField {\n    constructor (...args) {\n        if (args.length === 2)\n            this.import(...args)\n        else if (args.length === 1 && typeof args[0] === \"number\") {\n            if (args[0] % 8 !== 0)\n                throw new Error(\"number of bits have to be a multiple of 8\")\n            let numBytes = args[0] >> 3\n            this.data = OctetArray.create(numBytes, true)\n        }\n        else\n            throw new Error(\"invalid or missing constructor argument\")\n    }\n    size () {\n        return (this.data.length << 3)\n    }\n    get (pos) {\n        let posByte = pos >> 3\n        if (posByte >= this.data.length)\n            throw new Error(\"bit position out of range\")\n        let posBit = 0x80 >> (pos % 8)\n        return !!(this.data[posByte] & posBit)\n    }\n    set (pos, val) {\n        let posByte = pos >> 3\n        if (posByte >= this.data.length)\n            throw new Error(\"bit out of range\")\n        let posBit = 0x80 >> (pos % 8)\n        if (val)\n            this.data[posByte] |= posBit\n        else\n            this.data[posByte] &= ~posBit\n        return this\n    }\n    clear () {\n        for (let i = 0, l = this.data.length; i < l; i++)\n            this.data[i] = 0x00\n        return this\n    }\n    export (type) {\n        if (typeof type !== \"string\" || !type.match(/^(?:rle\\+)?(?:array|b16|z85)$/))\n            throw new Error(\"invalid export type\")\n        let m = type.match(/^rle\\+(.+)$/)\n        let rle = false\n        if (m !== null) {\n            rle = true\n            type = m[1]\n        }\n        let input = this.data\n        if (rle) {\n            let size = RLE.encodeSize(this.data)\n            input = new Array(size)\n            RLE.encode(this.data, input)\n        }\n        let output\n        if (type === \"z85\")\n            output = Z85.encode(input, input.length)\n        else if (type === \"b16\")\n            output = B16.encode(input, input.length)\n        else if (type === \"array\")\n            output = rle ? input : Array.prototype.slice.call(input, 0)\n        return output\n    }\n    import (type, data) {\n        if (typeof type !== \"string\" || !type.match(/^(?:rle\\+)?(?:array|b16|z85)$/))\n            throw new Error(\"invalid import type\")\n        let m = type.match(/^rle\\+(.+)$/)\n        let rle = false\n        if (m !== null) {\n            rle = true\n            type = m[1]\n        }\n        let input\n        if (type === \"z85\")\n            input = Z85.decode(data)\n        else if (type === \"b16\")\n            input = B16.decode(data)\n        else if (type === \"array\")\n            input = data\n        if (rle) {\n            let size = RLE.decodeSize(input)\n            this.data = OctetArray.create(size, false)\n            RLE.decode(input, this.data)\n        }\n        else {\n            let size = input.length\n            this.data = OctetArray.create(size, false)\n            for (let i = 0; i < size; i++)\n                this.data[i] = input[i]\n        }\n        return this\n    }\n}\n\n","/*\n**  MostLikely -- Most-Likely Classification Through Bloom-Filtering\n**  Copyright (c) 2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  This provides a Bloom Filter which can use both 4-bit counters\n    (for supporting removal operations) and plain 1-bit masks.\n    (see https://en.wikipedia.org/wiki/Bloom_filter)  */\n\n/*  internal requirements  */\nimport BitField    from \"./mostlikely-type-bitfield\"\nimport MurmurHash3 from \"./mostlikely-hash-murmurhash3\"\nimport Jenkins     from \"./mostlikely-hash-jenkins\"\nimport CRC32       from \"./mostlikely-hash-crc32\"\nimport DJBX33X     from \"./mostlikely-hash-djbx33x\"\nimport FNV         from \"./mostlikely-hash-fnv\"\n\n/*  the minimum number of bits for a particular item count and expected error rate  */\nconst LN2_SQUARED = Math.LN2 * Math.LN2\nconst minBits = (itemCount, errorRate) =>\n    Math.round(-1.0 / LN2_SQUARED * itemCount * Math.log(errorRate))\n\n/*  the number of hashes for a particular number of bits and an item count  */\nconst HASHES_MAX = 50\nconst numHashes = (numBits, itemCount) => {\n    let hashes = Math.round((numBits / itemCount) * Math.LN2)\n    if (hashes > HASHES_MAX)\n        hashes = HASHES_MAX\n    return hashes\n}\n\n/*  the hash functions  */\nconst hashes = [\n    (data, size, num) => MurmurHash3(data, size, num),\n    (data, size, num) => Jenkins    (data, size, num),\n    (data, size, num) => CRC32      (data, size, num),\n    (data, size, num) => DJBX33X    (data, size, num),\n    (data, size, num) => FNV        (data, size, num)\n]\nconst hash = (num, max, data, size) =>\n    hashes[num % hashes.length](data, size, num)\n\n/*  counter parameters (fully sufficient)  */\nconst COUNTER_BITS = 4\nconst COUNTER_MAX  = Math.pow(2, COUNTER_BITS) - 1\n\n/*  counter operations  */\nconst bf_get = (bf, idx) => {\n    let num = 0\n    for (let i = 0; i < COUNTER_BITS; i++)\n        num += ((bf.get(idx * COUNTER_BITS + i) ? 1 : 0) << i)\n    return num\n}\nconst bf_set = (bf, idx, num) => {\n    if (num > COUNTER_MAX)\n        num = COUNTER_MAX\n    for (let i = 0; i < COUNTER_BITS; i++)\n        bf.set(idx * COUNTER_BITS + i, num & (1 << i))\n}\n\n/*  the API class  */\nexport default class BloomFilter {\n    /*  Bloom Filter object construction  */\n    constructor (itemCount = 1000000, errorRate = 0.005, mask = true, counter = false) {\n        if (!mask && !counter)\n            throw new Error(\"at least one of mask or counter has to be enabled\")\n        this.nBits    = minBits(itemCount, errorRate)\n        this.nBytes   = Math.ceil(this.nBits / 8)\n        this.nBits    = this.nBytes * 8\n        this.nHashes  = numHashes(this.nBits, itemCount)\n        this.bfMask   = mask    ? new BitField(this.nBits)                : null\n        this.bfCntr   = counter ? new BitField(this.nBits * COUNTER_BITS) : null\n        return this\n    }\n\n    /*  export Bloom Filter details  */\n    export (type = \"rle+z85\") {\n        return {\n            bits:   this.nBits,\n            hashes: this.nHashes,\n            mask:   this.bfMask ? this.bfMask.export(type) : null,\n            cntr:   this.bfCntr ? this.bfCntr.export(type) : null\n        }\n    }\n\n    /*  import Bloom Filter details  */\n    import (obj, type = \"rle+z85\") {\n        this.nBits   = obj.bits\n        this.nBytes  = obj.bits * 8\n        this.nHashes = obj.hashes\n        this.bfMask  = obj.mask ? new BitField(type, obj.mask) : null\n        this.bfCntr  = obj.cntr ? new BitField(type, obj.cntr) : null\n        return this\n    }\n\n    /*  format Bloom Filter exports  */\n    format (type = \"rle+z85\") {\n        let e = this.export(type)\n        return `${e.bits},${e.hashes},${e.mask ? e.mask : \"-\"},${e.cntr ? e.cntr : \"-\"}`\n    }\n\n    /*  parse Bloom Filter exports  */\n    parse (str, type = \"rle+z85\") {\n        let [ , bits, hashes, mask, cntr ] = str.match(/^(\\d+),(\\d+),(.+),(.+)$/)\n        if (mask === \"-\") mask = null\n        if (cntr === \"-\") cntr = null\n        this.import({ bits, hashes, mask, cntr }, type)\n        return this\n    }\n\n    /*  insert data into the Bloom filter  */\n    insert (data, size = data.length) {\n        for (let i = 0; i < this.nHashes; i++) {\n            var idx = hash(i, this.nHashes, data, size) % this.nBits\n            if (this.bfCntr) {\n                let num = bf_get(this.bfCntr, idx)\n                num++;\n                bf_set(this.bfCntr, idx, num)\n            }\n            if (this.bfMask)\n                this.bfMask.set(idx, true)\n        }\n        return this\n    }\n\n    /*  remove data from the Bloom filter (requires counters)  */\n    remove (data, size = data.length) {\n        if (!this.bfCntr)\n            throw new Error(\"remove: removing elements requires counters\")\n        for (let i = 0; i < this.nHashes; i++) {\n            var idx = hash(i, this.nHashes, data, size) % this.nBits\n            let num = bf_get(this.bfCntr, idx)\n            num--;\n            if (num < 0)\n                num = 0\n            bf_set(this.bfCntr, idx, num)\n            if (this.bfMask)\n                if (num === 0)\n                    this.bfMask.set(idx, false)\n        }\n        return this\n    }\n\n    /*  check whether data was once inserted into the Bloom Filter\n        ATTENTION: this is the essential operation: it causes no\n        false negatives (i.e. it 100% determines whether the data was\n        NOT inserted) and causes false positives (i.e. it determines\n        that the data was inserted, even if it actually was not) with\n        approximately the expected errror rate  */\n    contains (data, size = data.length) {\n        for (let i = 0; i < this.nHashes; i++) {\n            let idx = hash(i, this.nHashes, data, size) % this.nBits\n            if (this.bfMask) {\n                if (!this.bfMask.get(idx))\n                    return false\n            }\n            else if (this.bfCntr) {\n                if (bf_get(this.bfCntr, idx) === 0)\n                    return false\n            }\n        }\n        return true\n    }\n\n    /*  clear the Bloom Filter  */\n    clear () {\n        this.bfCntr.clear()\n        this.bfMask.clear()\n        return this\n    }\n}\n\n","/*\n**  MostLikely -- Most-Likely Classification Through Bloom-Filtering\n**  Copyright (c) 2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  This provides a little abstraction for an Array of Octets.  */\n\n/* global Uint8Array: false */\n/* global Buffer: false */\n\nexport default class OctetArray {\n    static create (size, clear) {\n        let oa\n        if (typeof Buffer !== \"undefined\") {\n            oa = new Buffer(size)\n            if (clear)\n                oa.fill(0x00)\n        }\n        else if (typeof Uint8Array !== \"undefined\")\n            oa = new Uint8Array(size)\n        else {\n            oa = new Array(size)\n            if (clear)\n                for (var i = 0; i < size; i++)\n                    oa[i] = 0x00;\n        }\n        return oa\n    }\n}\n\n","/*\n**  MostLikely -- Most-Likely Classification Through Bloom-Filtering\n**  Copyright (c) 2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport BloomFilter from \"./mostlikely-type-bloomfilter\"\nmodule.exports = BloomFilter\n\n"]}